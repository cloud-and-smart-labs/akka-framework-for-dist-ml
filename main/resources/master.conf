akka {
  actor {
    provider = "cluster"
    deployment {
      /workerRegion/workProcessorRouter {
        router = round-robin-pool
        nr-of-instances= 4
        
        cluster {
          enabled = on
          max-nr-of-instances-per-node = 1
          allow-local-routees = off
          use-roles = ["worker"]
        }   
      }
    }
  }
  remote {
    artery {
      enabled = on
      transport = tcp
 	  
 	  bind {
	    hostname = "0.0.0.0"
	    port = ${clustering.port}
	  }
	  
	  canonical{
      	hostname = ${clustering.ip}
        port = ${clustering.port}
      }
    }
  }

  cluster {
    seed-nodes = [
      "akka://"${clustering.cluster.name}"@"${clustering.seed1.ip}":"${clustering.seed1.port},
      "akka://"${clustering.cluster.name}"@"${clustering.seed2.ip}":"${clustering.seed2.port}
    ]
  }
}

akka.cluster.jmx.multi-mbeans-in-same-jvm = on
akka.actor.allow-java-serialization = on
akka.log-dead-letters = off
akka.actor.warn-about-java-serializer-usage = off

akka {
  actor {
    serializers {
      proto = "akka.remote.serialization.ProtobufSerializer"
    }
  }
}

clustering {
  ip = "0.0.0.0"
  ip = ${?CLUSTER_IP}
  port = 0
  port = ${?CLUSTER_PORT}
  seed1.ip = "127.0.0.1"
  seed1.ip = ${?CLUSTER_IP}
  seed1.ip = ${?SEED1_IP}
  seed1.port = 2552
  seed1.port = ${?SEED1_PORT}
  seed2.ip = "127.0.0.1"
  seed2.ip = ${?CLUSTER_IP}
  seed2.ip = ${?SEED2_IP}
  seed2.port = 2534
  seed2.port = ${?SEED2_PORT}
  cluster.name = MasterSystem
  role = ${?ROLE}
}